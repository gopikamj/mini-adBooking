{"ast":null,"code":"var _jsxFileName = \"D:\\\\gopika\\\\backup_08_02_2025\\\\online-newspaper-ad-booking\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { getUserData } from \"../services/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Enhanced fetchUser function with proper error handling\n  const fetchUser = async () => {\n    const token = localStorage.getItem(\"token\");\n    const storedRole = localStorage.getItem(\"userRole\");\n    const storedUserId = localStorage.getItem(\"userId\");\n    if (!token) {\n      console.log(\"No token found - user not authenticated\");\n      setUser(null);\n      setLoading(false);\n      return;\n    }\n    try {\n      setLoading(true);\n      const userData = await getUserData();\n      if (userData) {\n        // Merge data from localStorage and API response\n        const completeUser = {\n          ...userData,\n          token,\n          role: userData.role || storedRole,\n          id: userData.id || storedUserId\n        };\n        setUser(completeUser);\n\n        // Ensure localStorage is up-to-date\n        localStorage.setItem(\"userRole\", completeUser.role);\n        localStorage.setItem(\"userId\", completeUser.id);\n      } else {\n        console.warn(\"Invalid token - clearing authentication\");\n        logout();\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch user data:\", error);\n      setError(error.message);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (token, userData) => {\n    localStorage.setItem(\"token\", token);\n    if (userData) {\n      localStorage.setItem(\"userRole\", userData.role);\n      localStorage.setItem(\"userId\", userData.id);\n    }\n    await fetchUser();\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"userId\");\n    setUser(null);\n    setError(null);\n  };\n\n  // Check authentication state on initial load\n  useEffect(() => {\n    const initializeAuth = async () => {\n      await fetchUser();\n    };\n    initializeAuth();\n  }, []);\n\n  // Value provided to consuming components\n  const contextValue = {\n    user,\n    loading,\n    error,\n    login,\n    logout,\n    fetchUser,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === \"admin\"\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getUserData","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","fetchUser","token","localStorage","getItem","storedRole","storedUserId","console","log","userData","completeUser","role","id","setItem","warn","logout","message","login","removeItem","initializeAuth","contextValue","isAdmin","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gopika/backup_08_02_2025/online-newspaper-ad-booking/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport { getUserData } from \"../services/api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Enhanced fetchUser function with proper error handling\r\n  const fetchUser = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const storedRole = localStorage.getItem(\"userRole\");\r\n    const storedUserId = localStorage.getItem(\"userId\");\r\n\r\n    if (!token) {\r\n      console.log(\"No token found - user not authenticated\");\r\n      setUser(null);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const userData = await getUserData();\r\n      \r\n      if (userData) {\r\n        // Merge data from localStorage and API response\r\n        const completeUser = {\r\n          ...userData,\r\n          token,\r\n          role: userData.role || storedRole,\r\n          id: userData.id || storedUserId\r\n        };\r\n        \r\n        setUser(completeUser);\r\n        \r\n        // Ensure localStorage is up-to-date\r\n        localStorage.setItem(\"userRole\", completeUser.role);\r\n        localStorage.setItem(\"userId\", completeUser.id);\r\n      } else {\r\n        console.warn(\"Invalid token - clearing authentication\");\r\n        logout();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch user data:\", error);\r\n      setError(error.message);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (token, userData) => {\r\n    localStorage.setItem(\"token\", token);\r\n    if (userData) {\r\n      localStorage.setItem(\"userRole\", userData.role);\r\n      localStorage.setItem(\"userId\", userData.id);\r\n    }\r\n    await fetchUser();\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userRole\");\r\n    localStorage.removeItem(\"userId\");\r\n    setUser(null);\r\n    setError(null);\r\n  };\r\n\r\n  // Check authentication state on initial load\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      await fetchUser();\r\n    };\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Value provided to consuming components\r\n  const contextValue = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    logout,\r\n    fetchUser,\r\n    isAdmin: user?.role === \"admin\"\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,MAAME,YAAY,GAAGH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAEnD,IAAI,CAACF,KAAK,EAAE;MACVK,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtDZ,OAAO,CAAC,IAAI,CAAC;MACbE,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACFA,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMW,QAAQ,GAAG,MAAMtB,WAAW,CAAC,CAAC;MAEpC,IAAIsB,QAAQ,EAAE;QACZ;QACA,MAAMC,YAAY,GAAG;UACnB,GAAGD,QAAQ;UACXP,KAAK;UACLS,IAAI,EAAEF,QAAQ,CAACE,IAAI,IAAIN,UAAU;UACjCO,EAAE,EAAEH,QAAQ,CAACG,EAAE,IAAIN;QACrB,CAAC;QAEDV,OAAO,CAACc,YAAY,CAAC;;QAErB;QACAP,YAAY,CAACU,OAAO,CAAC,UAAU,EAAEH,YAAY,CAACC,IAAI,CAAC;QACnDR,YAAY,CAACU,OAAO,CAAC,QAAQ,EAAEH,YAAY,CAACE,EAAE,CAAC;MACjD,CAAC,MAAM;QACLL,OAAO,CAACO,IAAI,CAAC,yCAAyC,CAAC;QACvDC,MAAM,CAAC,CAAC;MACV;IACF,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdQ,OAAO,CAACR,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;MACvBD,MAAM,CAAC,CAAC;IACV,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMmB,KAAK,GAAG,MAAAA,CAAOf,KAAK,EAAEO,QAAQ,KAAK;IACvCN,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;IACpC,IAAIO,QAAQ,EAAE;MACZN,YAAY,CAACU,OAAO,CAAC,UAAU,EAAEJ,QAAQ,CAACE,IAAI,CAAC;MAC/CR,YAAY,CAACU,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAACG,EAAE,CAAC;IAC7C;IACA,MAAMX,SAAS,CAAC,CAAC;EACnB,CAAC;EAED,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAChCf,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;IACnCf,YAAY,CAACe,UAAU,CAAC,QAAQ,CAAC;IACjCtB,OAAO,CAAC,IAAI,CAAC;IACbI,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACd,MAAMiC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMlB,SAAS,CAAC,CAAC;IACnB,CAAC;IACDkB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAG;IACnBzB,IAAI;IACJE,OAAO;IACPE,KAAK;IACLkB,KAAK;IACLF,MAAM;IACNd,SAAS;IACToB,OAAO,EAAE,CAAA1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,IAAI,MAAK;EAC1B,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAEH,YAAa;IAAA3B,QAAA,EACvCA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CA1FWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}