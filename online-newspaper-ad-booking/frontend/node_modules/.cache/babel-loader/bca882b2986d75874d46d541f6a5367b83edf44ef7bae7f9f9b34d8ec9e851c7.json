{"ast":null,"code":"var _jsxFileName = \"D:\\\\gopika\\\\backup_08_02_2025\\\\online-newspaper-ad-booking\\\\frontend\\\\src\\\\pages\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/BookAd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = ({\n  userId,\n  adSpaceId,\n  content,\n  price,\n  onPaymentSuccess\n}) => {\n  _s();\n  const [paymentProof, setPaymentProof] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleFileChange = e => {\n    setPaymentProof(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!paymentProof) {\n      setError('Please upload payment proof.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('userId', userId);\n    formData.append('adSpaceId', adSpaceId);\n    formData.append('content', content);\n    formData.append('price', price);\n    formData.append('paymentProof', paymentProof);\n    try {\n      setLoading(true);\n      const response = await axios.post('/api/ad-booking/book-ad', formData);\n      alert(response.data.message);\n      onPaymentSuccess();\n    } catch (error) {\n      setError('Failed to upload payment. Try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Payment Proof\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"paymentProof\",\n        children: \"Payment Proof:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"paymentProof\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Uploading...' : 'Submit Payment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"3qoz6RptcLFXzut81SwTyvmdRRw=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PaymentPage","userId","adSpaceId","content","price","onPaymentSuccess","_s","paymentProof","setPaymentProof","loading","setLoading","error","setError","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","alert","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["D:/gopika/backup_08_02_2025/online-newspaper-ad-booking/frontend/src/pages/PaymentPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/BookAd.css';\r\n\r\nconst PaymentPage = ({ userId, adSpaceId, content, price, onPaymentSuccess }) => {\r\n  const [paymentProof, setPaymentProof] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setPaymentProof(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!paymentProof) {\r\n      setError('Please upload payment proof.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('userId', userId);\r\n    formData.append('adSpaceId', adSpaceId);\r\n    formData.append('content', content);\r\n    formData.append('price', price);\r\n    formData.append('paymentProof', paymentProof);\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post('/api/ad-booking/book-ad', formData);\r\n      alert(response.data.message);\r\n      onPaymentSuccess();\r\n    } catch (error) {\r\n      setError('Failed to upload payment. Try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-page-container\">\r\n      <h2>Upload Payment Proof</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"paymentProof\">Payment Proof:</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"paymentProof\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? 'Uploading...' : 'Submit Payment'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,gBAAgB,GAAIC,CAAC,IAAK;IAC9BN,eAAe,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACX,YAAY,EAAE;MACjBK,QAAQ,CAAC,8BAA8B,CAAC;MACxC;IACF;IAEA,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEpB,MAAM,CAAC;IACjCkB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEnB,SAAS,CAAC;IACvCiB,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAElB,OAAO,CAAC;IACnCgB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEjB,KAAK,CAAC;IAC/Be,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEd,YAAY,CAAC;IAE7C,IAAI;MACFG,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMY,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAAC,yBAAyB,EAAEJ,QAAQ,CAAC;MACtEK,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;MAC5BrB,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,QAAQ,CAAC,sCAAsC,CAAC;IAClD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IAAK4B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrC7B,OAAA;MAAA6B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BrB,KAAK,iBAAIZ,OAAA;MAAG4B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CjC,OAAA;MAAMkC,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,gBAC3B7B,OAAA;QAAOmC,OAAO,EAAC,cAAc;QAAAN,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpDjC,OAAA;QACEoC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,cAAc;QACjBC,MAAM,EAAC,SAAS;QAChBC,QAAQ,EAAEzB;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFjC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAACI,QAAQ,EAAE9B,OAAQ;QAAAmB,QAAA,EACrCnB,OAAO,GAAG,cAAc,GAAG;MAAgB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CArDIN,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAuDjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}