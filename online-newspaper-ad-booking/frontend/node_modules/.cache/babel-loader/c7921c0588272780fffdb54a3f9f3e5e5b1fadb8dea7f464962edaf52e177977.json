{"ast":null,"code":"var _jsxFileName = \"D:\\\\gopika\\\\online-newspaper-ad-booking\\\\frontend\\\\src\\\\pages\\\\BookAd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getNewspapers } from \"../services/api\"; // ✅ Fetch newspapers API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookAd() {\n  _s();\n  const [newspapers, setNewspapers] = useState([]);\n  const [adData, setAdData] = useState({\n    user_id: \"\",\n    // ✅ Set dynamically later\n    newspaper_id: \"\",\n    content: \"\",\n    price: 0\n  });\n  useEffect(() => {\n    async function fetchNewspapers() {\n      const data = await getNewspapers();\n      setNewspapers(data);\n    }\n    fetchNewspapers();\n\n    // ✅ Fetch user_id from localStorage if available\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      setAdData(prev => ({\n        ...prev,\n        user_id: user.id\n      }));\n    }\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!adData.user_id || !adData.newspaper_id || !adData.content) {\n      alert(\"All fields are required!\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/api/ads/book\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(adData)\n      });\n      const data = await response.json();\n      alert(data.message);\n    } catch (error) {\n      console.error(\"❌ Error booking ad:\", error);\n      alert(\"Failed to book the ad.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book an Ad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Newspaper:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: adData.newspaper_id,\n        onChange: e => setAdData({\n          ...adData,\n          newspaper_id: e.target.value\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Newspaper --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), newspapers.map(paper => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: paper.id,\n          children: [paper.name, \" (\\u20B9\", paper.price_per_word, \" per word)\"]\n        }, paper.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter ad content...\",\n        onChange: e => setAdData({\n          ...adData,\n          content: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAd, \"s1/4yw7dw3MKhxg1XMzSxtyJi/Y=\");\n_c = BookAd;\nexport default BookAd;\nvar _c;\n$RefreshReg$(_c, \"BookAd\");","map":{"version":3,"names":["React","useState","useEffect","getNewspapers","jsxDEV","_jsxDEV","BookAd","_s","newspapers","setNewspapers","adData","setAdData","user_id","newspaper_id","content","price","fetchNewspapers","data","storedUser","localStorage","getItem","user","JSON","parse","prev","id","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","stringify","json","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","map","paper","name","price_per_word","placeholder","type","_c","$RefreshReg$"],"sources":["D:/gopika/online-newspaper-ad-booking/frontend/src/pages/BookAd.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getNewspapers } from \"../services/api\"; // ✅ Fetch newspapers API\r\n\r\nfunction BookAd() {\r\n  const [newspapers, setNewspapers] = useState([]);\r\n  const [adData, setAdData] = useState({\r\n    user_id: \"\", // ✅ Set dynamically later\r\n    newspaper_id: \"\",\r\n    content: \"\",\r\n    price: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchNewspapers() {\r\n      const data = await getNewspapers();\r\n      setNewspapers(data);\r\n    }\r\n\r\n    fetchNewspapers();\r\n\r\n    // ✅ Fetch user_id from localStorage if available\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      setAdData((prev) => ({ ...prev, user_id: user.id }));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!adData.user_id || !adData.newspaper_id || !adData.content) {\r\n      alert(\"All fields are required!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/ads/book\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(adData),\r\n      });\r\n\r\n      const data = await response.json();\r\n      alert(data.message);\r\n    } catch (error) {\r\n      console.error(\"❌ Error booking ad:\", error);\r\n      alert(\"Failed to book the ad.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Book an Ad</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Select Newspaper:</label>\r\n        <select\r\n          value={adData.newspaper_id}\r\n          onChange={(e) =>\r\n            setAdData({ ...adData, newspaper_id: e.target.value })\r\n          }\r\n          required\r\n        >\r\n          <option value=\"\">-- Select Newspaper --</option>\r\n          {newspapers.map((paper) => (\r\n            <option key={paper.id} value={paper.id}>\r\n              {paper.name} (₹{paper.price_per_word} per word)\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <textarea\r\n          placeholder=\"Enter ad content...\"\r\n          onChange={(e) =>\r\n            setAdData({ ...adData, content: e.target.value })\r\n          }\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookAd;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}