{"ast":null,"code":"import axios from \"axios\";\n\n// ✅ Ensure API_BASE_URL is defined only once\nconst API_BASE_URL = \"http://localhost:5000/api\";\n\n// ✅ Create a single Axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n// Add this admin-specific login function to your api.js\nexport const adminLogin = async (email, password) => {\n  try {\n    console.log(\"Attempting admin login with:\", email);\n    const response = await api.post(\"/auth/admin-login\", {\n      email,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"role\", \"admin\"); // Explicitly set admin role\n      console.log(\"✅ Admin token saved:\", response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response3, _error$response3$data;\n    console.error(\"❌ Admin Login Error:\", {\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      message: error.message\n    });\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Admin login failed\");\n  }\n};\n\n// Then modify your login handler in the component:\nconst handleAdminLogin = async e => {\n  e.preventDefault();\n  setLoading(true);\n  try {\n    var _data$user;\n    const data = await adminLogin(email, password); // Use adminLogin instead of loginUser\n\n    // Store admin-specific data\n    localStorage.setItem(\"adminData\", JSON.stringify(data.user));\n    alert(`Admin login successful! Welcome ${((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.name) || 'Admin'}`);\n    await fetchUser();\n\n    // Redirect to admin dashboard\n    navigate(\"/admin-dashboard\");\n  } catch (error) {\n    console.error(\"Admin login failed:\", error);\n    alert(error.message);\n  } finally {\n    setLoading(false);\n  }\n};\n// ✅ Helper: Retrieve token from localStorage\nexport const getToken = () => {\n  const token = localStorage.getItem(\"token\");\n  console.log(\"🔍 Retrieved Token:\", token);\n  return token;\n};\n\n// ✅ Automatically add Authorization header if token exists\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response4;\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n    console.warn(\"Authentication token is invalid or expired\");\n    localStorage.removeItem(\"token\");\n  }\n  return Promise.reject(error);\n});\n\n// ✅ Export all API functions that were missing\nexport const getUserData = async () => {\n  try {\n    var _response$data;\n    const token = getToken();\n    if (!token) {\n      console.warn(\"No token found when getting user data\");\n      return null;\n    }\n    const response = await api.get(\"/auth/user\");\n    return ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.user) || response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(\"❌ Error fetching user data:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    return null;\n  }\n};\nexport const getNewspapers = async () => {\n  try {\n    const response = await api.get(\"/newspapers\");\n    return response.data;\n  } catch (error) {\n    console.error(\"❌ Fetch Newspapers Error:\", error);\n    return [];\n  }\n};\n\n// ✅ Keep all existing functions exactly as they were\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await api.post(\"/auth/login\", {\n      email,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem(\"token\", response.data.token);\n      console.log(\"✅ Token saved:\", response.data.token);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error(\"❌ Login Error:\", ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport const bookAd = async adData => {\n  try {\n    const response = await api.post(\"/ad-booking\", adData);\n    console.log(\"✅ Ad booked successfully:\", response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error(\"❌ Error booking ad:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};\nexport const signupUser = async userData => {\n  try {\n    const response = await api.post(\"/auth/signup\", userData);\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    console.error(\"❌ Signup Error:\", ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n    throw error;\n  }\n};\nexport const logoutUser = () => {\n  localStorage.removeItem(\"token\");\n  console.log(\"🚪 User logged out successfully.\");\n};\nexport const getAuthenticatedUser = () => {\n  const token = getToken();\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    console.log(\"🔍 Decoded Token Payload:\", payload);\n    return payload;\n  } catch (error) {\n    console.error(\"❌ Token decoding error:\", error);\n    return null;\n  }\n};\n\n// ✅ Export the Axios instance\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","adminLogin","email","password","console","log","response","post","data","token","localStorage","setItem","error","_error$response","_error$response2","_error$response3","_error$response3$data","status","message","Error","handleAdminLogin","e","preventDefault","setLoading","_data$user","JSON","stringify","user","alert","name","fetchUser","navigate","getToken","getItem","interceptors","request","use","config","Authorization","Promise","reject","_error$response4","warn","removeItem","getUserData","_response$data","get","_error$response5","getNewspapers","loginUser","_error$response6","bookAd","adData","_error$response7","signupUser","userData","_error$response8","logoutUser","getAuthenticatedUser","payload","parse","atob","split"],"sources":["D:/gopika/backup_08_02_2025/online-newspaper-ad-booking/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// ✅ Ensure API_BASE_URL is defined only once\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\n// ✅ Create a single Axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n// Add this admin-specific login function to your api.js\r\nexport const adminLogin = async (email, password) => {\r\n  try {\r\n    console.log(\"Attempting admin login with:\", email);\r\n    const response = await api.post(\"/auth/admin-login\", { email, password });\r\n\r\n    if (response.data.token) {\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      localStorage.setItem(\"role\", \"admin\"); // Explicitly set admin role\r\n      console.log(\"✅ Admin token saved:\", response.data.token);\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Admin Login Error:\", {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      message: error.message\r\n    });\r\n    throw new Error(error.response?.data?.message || \"Admin login failed\");\r\n  }\r\n};\r\n\r\n// Then modify your login handler in the component:\r\nconst handleAdminLogin = async (e) => {\r\n  e.preventDefault();\r\n  setLoading(true);\r\n\r\n  try {\r\n    const data = await adminLogin(email, password); // Use adminLogin instead of loginUser\r\n    \r\n    // Store admin-specific data\r\n    localStorage.setItem(\"adminData\", JSON.stringify(data.user));\r\n    \r\n    alert(`Admin login successful! Welcome ${data.user?.name || 'Admin'}`);\r\n    await fetchUser();\r\n    \r\n    // Redirect to admin dashboard\r\n    navigate(\"/admin-dashboard\");\r\n    \r\n  } catch (error) {\r\n    console.error(\"Admin login failed:\", error);\r\n    alert(error.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n// ✅ Helper: Retrieve token from localStorage\r\nexport const getToken = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  console.log(\"🔍 Retrieved Token:\", token);\r\n  return token;\r\n};\r\n\r\n// ✅ Automatically add Authorization header if token exists\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = getToken();\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      console.warn(\"Authentication token is invalid or expired\");\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ✅ Export all API functions that were missing\r\nexport const getUserData = async () => {\r\n  try {\r\n    const token = getToken();\r\n    if (!token) {\r\n      console.warn(\"No token found when getting user data\");\r\n      return null;\r\n    }\r\n    \r\n    const response = await api.get(\"/auth/user\");\r\n    return response.data?.user || response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Error fetching user data:\", error.response?.data || error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const getNewspapers = async () => {\r\n  try {\r\n    const response = await api.get(\"/newspapers\");\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Fetch Newspapers Error:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// ✅ Keep all existing functions exactly as they were\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await api.post(\"/auth/login\", { email, password });\r\n\r\n    if (response.data.token) {\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      console.log(\"✅ Token saved:\", response.data.token);\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Login Error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const bookAd = async (adData) => {\r\n  try {\r\n    const response = await api.post(\"/ad-booking\", adData);\r\n    console.log(\"✅ Ad booked successfully:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Error booking ad:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const signupUser = async (userData) => {\r\n  try {\r\n    const response = await api.post(\"/auth/signup\", userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"❌ Signup Error:\", error.response?.data || error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem(\"token\");\r\n  console.log(\"🚪 User logged out successfully.\");\r\n};\r\n\r\nexport const getAuthenticatedUser = () => {\r\n  const token = getToken();\r\n  if (!token) return null;\r\n  try {\r\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n    console.log(\"🔍 Decoded Token Payload:\", payload);\r\n    return payload;\r\n  } catch (error) {\r\n    console.error(\"❌ Token decoding error:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// ✅ Export the Axios instance\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}